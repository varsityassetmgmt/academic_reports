# Generated by Django 5.2.6 on 2025-09-24 07:46

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('is_current_academic_year', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AcademicDevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('classes', models.ManyToManyField(blank=True, to='students.classname')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='zone_state', to='branches.state')),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('building_code', models.CharField(blank=True, max_length=200, null=True)),
                ('location_incharge', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phonenumber', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_devisions', models.ManyToManyField(blank=True, related_name='branch_acd_dev', to='branches.academicdevision')),
                ('classes', models.ManyToManyField(blank=True, related_name='branch_classes', to='students.classname')),
                ('orientations', models.ManyToManyField(blank=True, related_name='branch_orientation', to='students.orientation')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branch_state', to='branches.state')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branch_zone', to='branches.zone')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
                'indexes': [models.Index(fields=['name'], name='branch_name_idx'), models.Index(fields=['is_active'], name='branch_is_active_idx'), models.Index(fields=['state'], name='branch_state_idx'), models.Index(fields=['zone'], name='branch_zone_idx')],
            },
        ),
    ]
