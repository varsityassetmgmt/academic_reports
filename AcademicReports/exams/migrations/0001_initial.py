# Generated by Django 5.2.6 on 2025-10-21 05:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0004_delete_section'),
        ('students', '0010_rename_external_id_section_varna_section_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamAttendanceStatus',
            fields=[
                ('exam_attendance_status_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('short_code', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamResultStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ExamStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoScholasticGrade',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=5, unique=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('point', models.PositiveSmallIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='co_scholatic_grade_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='co_scholatic_grade_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-point'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('exam_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_visible', models.BooleanField(default=False)),
                ('is_progress_card_visible', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_editable', models.BooleanField(default=True)),
                ('marks_entry_expiry_datetime', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('academic_devisions', models.ManyToManyField(blank=True, related_name='exam_academic_devisions', to='branches.academicdevision')),
                ('academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exams_academic_year', to='branches.academicyear')),
                ('branches', models.ManyToManyField(blank=True, related_name='exams_branches', to='branches.branch')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_created_by', to=settings.AUTH_USER_MODEL)),
                ('orientations', models.ManyToManyField(blank=True, related_name='exams_orientations', to='students.orientation')),
                ('states', models.ManyToManyField(blank=True, related_name='exams_states', to='branches.state')),
                ('student_classes', models.ManyToManyField(blank=True, related_name='exams_classes', to='students.classname')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_updated_by', to=settings.AUTH_USER_MODEL)),
                ('zones', models.ManyToManyField(blank=True, related_name='exams_zones', to='branches.zone')),
                ('exam_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='exams.examstatus')),
            ],
        ),
        migrations.CreateModel(
            name='ExamInstance',
            fields=[
                ('exam_instance_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('has_external_marks', models.BooleanField(default=False)),
                ('has_internal_marks', models.BooleanField(default=False)),
                ('has_subject_skills', models.BooleanField(default=False)),
                ('has_subject_co_scholastic_grade', models.BooleanField(default=False)),
                ('date', models.DateField()),
                ('exam_start_time', models.TimeField()),
                ('exam_end_time', models.TimeField()),
                ('maximum_marks_external', models.IntegerField(blank=True, null=True)),
                ('cut_off_marks_external', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('maximum_marks_internal', models.IntegerField(blank=True, null=True)),
                ('cut_off_marks_internal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_optional', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_instance_created_by', to=settings.AUTH_USER_MODEL)),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exam_instance_exam', to='exams.exam')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_instance_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BranchWiseExamResultStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finalized_at', models.DateTimeField(blank=True, null=True)),
                ('is_progress_card_downloaded', models.BooleanField(default=False)),
                ('marks_completion_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('marks_entry_expiry_datetime', models.DateTimeField(blank=True, null=True)),
                ('total_sections', models.PositiveIntegerField(default=0)),
                ('number_of_sections_completed', models.PositiveIntegerField(default=0)),
                ('number_of_sections_pending', models.PositiveIntegerField(default=0)),
                ('progress_card_pending_sections', models.PositiveIntegerField(default=0)),
                ('is_visible', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branch_wise_exam_result_status', to='branches.academicyear')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branch_wise_exam_result_status', to='branches.branch')),
                ('finalized_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='finalized_branch_exam_result_status', to=settings.AUTH_USER_MODEL)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branch_wise_exam_result_status', to='exams.exam')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branch_wise_exam_result_status', to='exams.examresultstatus')),
            ],
            options={
                'verbose_name': 'Branch Wise Exam Result Status',
                'verbose_name_plural': 'Branch Wise Exams Result Status',
            },
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('exam_type_id', models.BigAutoField(db_index=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_type_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_type_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='exam',
            name='exam_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exams_exam_type', to='exams.examtype'),
        ),
        migrations.CreateModel(
            name='GradeBoundary',
            fields=[
                ('grade_boundary_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('grade', models.CharField(max_length=10, unique=True)),
                ('min_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Grade Boundaries',
                'ordering': ['-min_percentage'],
                'indexes': [models.Index(fields=['min_percentage', 'max_percentage'], name='exams_grade_min_per_cf40e0_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('exam_result_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('external_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('internal_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('total_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('skill_external_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('skill_internal_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('skill_total_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('class_rank', models.IntegerField(blank=True, null=True)),
                ('section_rank', models.IntegerField(blank=True, null=True)),
                ('zone_rank', models.IntegerField(blank=True, null=True)),
                ('state_rank', models.IntegerField(blank=True, null=True)),
                ('all_india_rank', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('co_scholastic_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exam_result_co_scholastic_grade', to='exams.coscholasticgrade')),
                ('exam_attendance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exam_results_attendance', to='exams.examattendancestatus')),
                ('exam_instance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_results_exam_instance', to='exams.examinstance')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_results_student', to='students.student')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_results_grade', to='exams.gradeboundary')),
                ('skills_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_result_skills_grade', to='exams.gradeboundary')),
            ],
        ),
        migrations.CreateModel(
            name='SectionWiseExamResultStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finalized_at', models.DateTimeField(blank=True, null=True)),
                ('marks_completion_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('marks_entry_expiry_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_progress_card_downloaded', models.BooleanField(default=False)),
                ('is_visible', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='section_exam_result_status', to='branches.academicyear')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='section_exam_result_status', to='branches.branch')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='section_exam_result_status', to='exams.exam')),
                ('finalized_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='finalized_section_exam_result_status', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='section_exam_result_status', to='students.section')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='section_exam_result_status', to='exams.examresultstatus')),
            ],
            options={
                'verbose_name': 'Section Exam Results Status',
                'verbose_name_plural': 'Section Exams Result Status',
            },
        ),
        migrations.CreateModel(
            name='StudentExamSummary',
            fields=[
                ('students_exam_summary_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('total_subjects_maximum_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('total_subjects_obtained_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('subjects_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_skills_maximum_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('total_skills_obtained_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('skills_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('section_rank', models.IntegerField(blank=True, null=True)),
                ('class_rank', models.IntegerField(blank=True, null=True)),
                ('zone_rank', models.IntegerField(blank=True, null=True)),
                ('state_rank', models.IntegerField(blank=True, null=True)),
                ('all_india_rank', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_summary_exam', to='exams.exam')),
                ('skills_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_exam_summary_skills_grade', to='exams.gradeboundary')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_summary_student', to='students.student')),
                ('subject_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_exam_summary_subject_grade', to='exams.gradeboundary')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.BigAutoField(db_index=True, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('academic_devisions', models.ManyToManyField(blank=True, related_name='subject_academic_devisions', to='branches.academicdevision')),
                ('class_names', models.ManyToManyField(blank=True, related_name='subject_classes', to='students.classname')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='examinstance',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_instance_subject', to='exams.subject'),
        ),
        migrations.CreateModel(
            name='SubjectSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_skill_created_by', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='skills', to='exams.subject')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_skill_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamSubjectSkillInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_external_marks', models.BooleanField(default=False)),
                ('has_internal_marks', models.BooleanField(default=False)),
                ('has_subject_co_scholastic_grade', models.BooleanField(default=True)),
                ('maximum_marks_external', models.IntegerField(blank=True, null=True)),
                ('cut_off_marks_external', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('maximum_marks_internal', models.IntegerField(blank=True, null=True)),
                ('cut_off_marks_internal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_subject_skill_instance_created_by', to=settings.AUTH_USER_MODEL)),
                ('exam_instance', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_subject_skills_instance_exam_instance', to='exams.examinstance')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_subject_skill_instance_updated_by', to=settings.AUTH_USER_MODEL)),
                ('subject_skill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_subject_skill_instance_subject_skill', to='exams.subjectskill')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSkillResult',
            fields=[
                ('exam_skill_result_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('external_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('internal_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('marks_obtained', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('co_scholastic_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exam_skill_results', to='exams.coscholasticgrade')),
                ('exam_attendance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='exam_skill_results_attendance', to='exams.examattendancestatus')),
                ('exam_result', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='skill_results', to='exams.examresult')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_skill_results_grade', to='exams.gradeboundary')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='skill_results', to='exams.subjectskill')),
            ],
        ),
        migrations.AddField(
            model_name='examinstance',
            name='subject_skills',
            field=models.ManyToManyField(blank=True, related_name='exam_instances', to='exams.subjectskill'),
        ),
        migrations.AddIndex(
            model_name='coscholasticgrade',
            index=models.Index(fields=['name'], name='exams_cosch_name_0457e1_idx'),
        ),
        migrations.AddIndex(
            model_name='coscholasticgrade',
            index=models.Index(fields=['point'], name='exams_cosch_point_b87080_idx'),
        ),
        migrations.AddIndex(
            model_name='branchwiseexamresultstatus',
            index=models.Index(fields=['academic_year'], name='exams_branc_academi_af3fcf_idx'),
        ),
        migrations.AddIndex(
            model_name='branchwiseexamresultstatus',
            index=models.Index(fields=['branch'], name='exams_branc_branch__937d85_idx'),
        ),
        migrations.AddIndex(
            model_name='branchwiseexamresultstatus',
            index=models.Index(fields=['exam'], name='exams_branc_exam_id_73b07b_idx'),
        ),
        migrations.AddIndex(
            model_name='branchwiseexamresultstatus',
            index=models.Index(fields=['status'], name='exams_branc_status__5a9508_idx'),
        ),
        migrations.AddIndex(
            model_name='branchwiseexamresultstatus',
            index=models.Index(fields=['is_visible'], name='exams_branc_is_visi_bbd80f_idx'),
        ),
        migrations.AddIndex(
            model_name='branchwiseexamresultstatus',
            index=models.Index(fields=['marks_entry_expiry_datetime'], name='exams_branc_marks_e_56dfe3_idx'),
        ),
        migrations.AddIndex(
            model_name='branchwiseexamresultstatus',
            index=models.Index(fields=['is_active'], name='exams_branc_is_acti_a63f4e_idx'),
        ),
        migrations.AddConstraint(
            model_name='branchwiseexamresultstatus',
            constraint=models.UniqueConstraint(fields=('academic_year', 'branch', 'exam'), name='unique_branch_wise_exam_result_status'),
        ),
        migrations.AddIndex(
            model_name='examtype',
            index=models.Index(fields=['is_active'], name='exams_examt_is_acti_89e782_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['academic_year'], name='exams_exam_academi_f5cdc5_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['exam_type'], name='exams_exam_exam_ty_ccbba1_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['academic_year', 'exam_type'], name='exams_exam_academi_b14863_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['is_visible'], name='exams_exam_is_visi_8f05f8_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['is_progress_card_visible'], name='exams_exam_is_prog_0e2dd5_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['is_active'], name='exams_exam_is_acti_1c1d9c_idx'),
        ),
        migrations.AddIndex(
            model_name='exam',
            index=models.Index(fields=['start_date', 'end_date'], name='exams_exam_start_d_3b125a_idx'),
        ),
        migrations.AddConstraint(
            model_name='exam',
            constraint=models.UniqueConstraint(fields=('name', 'academic_year', 'exam_type'), name='unique_exam_per_year_type'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['student'], name='exams_examr_student_dfce85_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['exam_instance'], name='exams_examr_exam_in_589974_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['external_marks'], name='exams_examr_externa_8a2748_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['total_marks'], name='exams_examr_total_m_8f698b_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['exam_instance', 'external_marks'], name='exams_examr_exam_in_64d248_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['exam_instance', 'total_marks'], name='exams_examr_exam_in_017f73_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['percentage'], name='exams_examr_percent_e615f8_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['class_rank'], name='exams_examr_class_r_c34608_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['section_rank'], name='exams_examr_section_b5f189_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['zone_rank'], name='exams_examr_zone_ra_2b7349_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['state_rank'], name='exams_examr_state_r_fb1c37_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['all_india_rank'], name='exams_examr_all_ind_81849d_idx'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['exam_instance', 'student'], name='idx_examresult_exam_student'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['exam_instance', 'is_active'], name='idx_examresult_exam_active'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['student', 'is_active'], name='idx_examresult_student_active'),
        ),
        migrations.AddIndex(
            model_name='examresult',
            index=models.Index(fields=['exam_instance', 'percentage'], name='idx_examresult_exam_percentage'),
        ),
        migrations.AddConstraint(
            model_name='examresult',
            constraint=models.UniqueConstraint(fields=('student', 'exam_instance'), name='unique_student_exam_instance'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['academic_year'], name='exams_secti_academi_537c63_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['branch'], name='exams_secti_branch__f26405_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['section'], name='exams_secti_section_50d5de_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['exam'], name='exams_secti_exam_id_adc486_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['status'], name='exams_secti_status__b281bc_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['is_visible'], name='exams_secti_is_visi_99eb5a_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['marks_entry_expiry_datetime'], name='exams_secti_marks_e_10934d_idx'),
        ),
        migrations.AddIndex(
            model_name='sectionwiseexamresultstatus',
            index=models.Index(fields=['is_active'], name='exams_secti_is_acti_9e87ba_idx'),
        ),
        migrations.AddConstraint(
            model_name='sectionwiseexamresultstatus',
            constraint=models.UniqueConstraint(fields=('academic_year', 'branch', 'section', 'exam'), name='unique_section_wise_exam_result_status'),
        ),
        migrations.AlterUniqueTogether(
            name='sectionwiseexamresultstatus',
            unique_together={('academic_year', 'branch', 'section', 'exam')},
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['student'], name='exams_stude_student_6e2995_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['exam'], name='exams_stude_exam_id_e9ad01_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['total_subjects_maximum_marks'], name='exams_stude_total_s_6b14e0_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['total_subjects_obtained_marks'], name='exams_stude_total_s_9c64fb_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['subjects_percentage'], name='exams_stude_subject_ec79c0_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['subject_grade'], name='exams_stude_subject_84a895_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['total_skills_maximum_marks'], name='exams_stude_total_s_ed276f_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['total_skills_obtained_marks'], name='exams_stude_total_s_339e42_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['skills_percentage'], name='exams_stude_skills__752403_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['skills_grade'], name='exams_stude_skills__fca138_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['class_rank'], name='exams_stude_class_r_9c264f_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['section_rank'], name='exams_stude_section_bae9ff_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['zone_rank'], name='exams_stude_zone_ra_aa2b89_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['state_rank'], name='exams_stude_state_r_02c7be_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['all_india_rank'], name='exams_stude_all_ind_1ab601_idx'),
        ),
        migrations.AddIndex(
            model_name='studentexamsummary',
            index=models.Index(fields=['is_active'], name='exams_stude_is_acti_6939d8_idx'),
        ),
        migrations.AddConstraint(
            model_name='studentexamsummary',
            constraint=models.UniqueConstraint(fields=('student', 'exam'), name='unique_student_exam_summary'),
        ),
        migrations.AddIndex(
            model_name='subject',
            index=models.Index(fields=['is_active'], name='exams_subje_is_acti_d4c6c2_idx'),
        ),
        migrations.AddIndex(
            model_name='subjectskill',
            index=models.Index(fields=['subject'], name='exams_subje_subject_f702c1_idx'),
        ),
        migrations.AddIndex(
            model_name='subjectskill',
            index=models.Index(fields=['is_active'], name='exams_subje_is_acti_3046f6_idx'),
        ),
        migrations.AddConstraint(
            model_name='subjectskill',
            constraint=models.UniqueConstraint(fields=('subject', 'name'), name='unique_subject_skill_name'),
        ),
        migrations.AddIndex(
            model_name='examsubjectskillinstance',
            index=models.Index(fields=['exam_instance'], name='exams_exams_exam_in_dfea8a_idx'),
        ),
        migrations.AddIndex(
            model_name='examsubjectskillinstance',
            index=models.Index(fields=['subject_skill'], name='exams_exams_subject_d85869_idx'),
        ),
        migrations.AddIndex(
            model_name='examsubjectskillinstance',
            index=models.Index(fields=['is_active'], name='exams_exams_is_acti_4528bb_idx'),
        ),
        migrations.AddIndex(
            model_name='examsubjectskillinstance',
            index=models.Index(fields=['has_external_marks'], name='exams_exams_has_ext_1644be_idx'),
        ),
        migrations.AddIndex(
            model_name='examsubjectskillinstance',
            index=models.Index(fields=['has_internal_marks'], name='exams_exams_has_int_dd11b7_idx'),
        ),
        migrations.AddIndex(
            model_name='examsubjectskillinstance',
            index=models.Index(fields=['has_subject_co_scholastic_grade'], name='exams_exams_has_sub_a7b27d_idx'),
        ),
        migrations.AddConstraint(
            model_name='examsubjectskillinstance',
            constraint=models.UniqueConstraint(fields=('exam_instance', 'subject_skill'), name='unique_exam_subject_skill_instance'),
        ),
        migrations.AddIndex(
            model_name='examskillresult',
            index=models.Index(fields=['exam_result'], name='exams_exams_exam_re_fd9b34_idx'),
        ),
        migrations.AddIndex(
            model_name='examskillresult',
            index=models.Index(fields=['skill'], name='exams_exams_skill_i_b9b403_idx'),
        ),
        migrations.AddIndex(
            model_name='examskillresult',
            index=models.Index(fields=['co_scholastic_grade'], name='exams_exams_co_scho_c41e6c_idx'),
        ),
        migrations.AddIndex(
            model_name='examskillresult',
            index=models.Index(fields=['exam_result', 'skill', 'co_scholastic_grade'], name='exams_exams_exam_re_051e48_idx'),
        ),
        migrations.AddConstraint(
            model_name='examskillresult',
            constraint=models.UniqueConstraint(fields=('exam_result', 'skill'), name='unique_examresult_skill'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['exam'], name='exams_exami_exam_id_1eafcd_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['subject'], name='exams_exami_subject_97193c_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['date'], name='exams_exami_date_a400ff_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['is_active'], name='exams_exami_is_acti_5801d7_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['has_external_marks'], name='exams_exami_has_ext_1a7bb7_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['has_internal_marks'], name='exams_exami_has_int_4fc43e_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['has_subject_skills'], name='exams_exami_has_sub_85c11f_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['has_subject_co_scholastic_grade'], name='exams_exami_has_sub_eba27b_idx'),
        ),
        migrations.AddIndex(
            model_name='examinstance',
            index=models.Index(fields=['exam', 'subject', 'is_active'], name='exams_exami_exam_id_88fc9d_idx'),
        ),
        migrations.AddConstraint(
            model_name='examinstance',
            constraint=models.UniqueConstraint(fields=('exam', 'subject'), name='unique_exam_subject_instance'),
        ),
    ]
